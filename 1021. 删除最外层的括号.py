# -*- encoding: utf-8 -*-
'''
@File    :   1021. 删除最外层的括号.py
@Time    :   2020/02/20 09:14:40
@Author  :   Zhang tao 
@Version :   1.0
@Desc    :   1021. 删除最外层的括号.py
'''

'''
有效括号字符串为空 ("")、"(" + A + ")" 或 A + B，其中 A 和 B 都是有效的括号字符串，+ 代表字符串的连接。例如，""，"()"，"(())()" 和 "(()(()))" 都是有效的括号字符串。

如果有效字符串 S 非空，且不存在将其拆分为 S = A+B 的方法，我们称其为原语（primitive），其中 A 和 B 都是非空有效括号字符串。

给出一个非空有效字符串 S，考虑将其进行原语化分解，使得：S = P_1 + P_2 + ... + P_k，其中 P_i 是有效括号字符串原语。

对 S 进行原语化分解，删除分解中每个原语字符串的最外层括号，返回 S 。

 

示例 1：

输入："(()())(())"
输出："()()()"
解释：
输入字符串为 "(()())(())"，原语化分解得到 "(()())" + "(())"，
删除每个部分中的最外层括号后得到 "()()" + "()" = "()()()"。
'''
# 思路：遇到( 加一，遇到) 减一；
# ( ( ) ( ) ) ( ( )  )
# 1 2 1 2 1 0 1 2 1 0
# 由于括号的对称性，可以看出只要是左括号'('其值大于1就应该加入，右括号')'只要大于0就加入
class Solution:
    def removeOuterParentheses(self, S: str) -> str:
        l=0
        res=""
        for i in S:
            if i=="(":
                l+=1;
                if l>1:res+=i;
            if i==")":
                l-=1;
                if l>0:res+=i;
        return res